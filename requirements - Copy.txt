def minmax(test_data):
  sqliteConnection = sqlite3.connect('openSIBI.sqlite3')
  cursor = sqliteConnection.cursor()
  cursor.execute("SELECT * FROM max")
  max = cursor.fetchall()
  cursor.execute("SELECT * FROM min")
  min = cursor.fetchall()

  max = pd.DataFrame(max)
  min = pd.DataFrame(min)
  test_data = [float(i) for i in test_data]
  test_data = pd.DataFrame(test_data)
  test_data = (test_data-min)*(1-0)/(max-min)
  test_data = np.array(test_data)
  test_data = test_data.reshape(1,-1)

  return test_data




  test_data = "-5.7045703125,7.336061197916667,3.7352083333333335,-12.9970703125,10.18701171875,2.126953125,2.0134228187919465,2.0134228187919465,2.0134228187919465,1.4189513095212065,1.4189513095212065,1.4189513095212065,-2.5443033426266273,-8.418422574233858,-16.602161894240286,18.455349368415508,90.9923152667834,225.03493571582484,48.61416666666667,-260.8495833333333,-169.95875,80,-224.0625,-0.0625,2.0134228187919465,2.0134228187919465,2.0134228187919465,1.4189513095212065,1.4189513095212065,1.4189513095212065,-16950309.087322567,-8377472.548503491,-11834622.753965396,23134879880.60873,9040263812.588032,14329674032.49674,-0.170601806640625,0.029984537760416666,0.560411376953125,-0.225123291015625,-0.3978271484375,-0.0487060546875,0.92352294921875,-0.27825927734375,2.0134228187919465,2.0134228187919465,2.0134228187919465,2.0134228187919465,1.4189513095212065,1.4189513095212065,1.4189513095212065,1.4189513095212065,-0.013908261046342935,-0.017820169847759006,-0.03909558747645034,-0.01165538649159087,0.017771640972559344,0.02473125783030013,0.07050188752394705,0.014041041577872272,1.4669512611409605,0.6185290843986926,-1.0303544686773907,2.234264545775706,1.5707963267948966,-2.215663363984007,2.0134228187919465,2.0134228187919465,2.0134228187919465,1.4189513095212065,1.4189513095212065,1.4189513095212065,-0.22558198211555572,-0.024487092125509573,-0.019125943641376784,0.7296304732401134,0.03778157338936887,0.027176545331979256,0.08,-11.9,-4.98,-3.32,-3.02,4.24,3.52,-4.7,1.5,-8,-4,-4.5,-2.5,5.5,5.5,-2,2.0408163265306123,2.0408163265306123,2.0408163265306123,2.0408163265306123,2.0408163265306123,2.0408163265306123,2.0408163265306123,2.0408163265306123,1.4285714285714286,1.4285714285714286,1.4285714285714286,1.4285714285714286,1.4285714285714286,1.4285714285714286,1.4285714285714286,1.4285714285714286,-9.33132674432,-3936.6534702599993,-107.44495585487999,-198.10260276351997,-23.060013425120005,-29.382056560640002,-10.48773132288,-637.7033842199999,72.37377022894593,228995.1323650241,1881.790956842368,4254.451496949355,241.8073007758084,334.0152189813556,84.57306538770432,20221.574313616195"
test_data = test_data.split(',')
test_data = np.array(test_data)
test_data = minmax(test_data)
predict = knn.predict(test_data)
predict